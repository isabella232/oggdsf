...\" $Header: /var/lib/cvsd/annodex/liboggz/doc/oggzdump.1,v 1.1 2004/01/04 05:28:25 zen Exp $
...\"
...\"	transcript compatibility for postscript use.
...\"
...\"	synopsis:  .P! <file.ps>
...\"
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
'\" t 
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n  
.TH "oggzdump" "1" 
.SH "NAME" 
oggzdump \(em Hexdump packets of an Ogg file, or revert an Ogg file from 
such a hexdump 
 
.SH "SYNOPSIS" 
.PP 
\fBoggzdump\fR [-b  | --binary ]  [-x  | --hexadecimal ]  [-n  | --new ]  [-o \fBfilename\fR  | --output \fBfilename\fR ]  [-s \fBserialno\fR  | --serialno \fBserialno\fR ]  [-O  | --hide-offset ]  [-S  | --hide-serialno ]  [-G  | --hide-granulepos ]  [-P  | --hide-packetno ]  [-h  | --help ] filename  
.PP 
\fBoggzdump\fR [-r  | --revert ]  [-o \fBfilename\fR  | --output \fBfilename\fR ] filename  
.SH "Description" 
.PP 
\fBoggzdump\fR generates a hexadecimal or binary dump 
of packets in an Ogg file, or creates an Ogg file from a hexadecimal 
oggzdump file. 
 
.SH "Options" 
.PP 
\fBoggzdump\fR accepts the following options: 
 
.SS "Dump format options" 
.IP "-b, --binary" 10 
Generate a binary dump of each packet 
 
.IP "-x, --hexadeciaml" 10 
Generate a hexadecimal dump of each packet 
 
.SS "Filtering options" 
.IP "-n, --new" 10 
Only dump the first packet of each new logical 
bitstream found; for correctly formed Ogg files, this dumps 
only the beginning-of-stream packets. 
 
.IP "-s \fBserialno\fR, --serialno \fBserialno\fR" 10 
Dump only the logical bitstream with specified 
\fBserialno\fR. 
 
.IP "-O, --hide-offset" 10 
Hide the byte offset field of the preamble for 
each packet dumped. This is particularly useful in 
conjunction with 
\fBoggzdiff\fP\fB(1)\fP when comparing Ogg bitstreams that differ 
only in page structure. 
 
.IP "-S, --hide-serialno" 10 
Hide the serialno field of the preamble for 
each packet dumped. This is particularly useful in 
conjunction with 
\fBoggzdiff\fP\fB(1)\fP when comparing Ogg bitstreams that differ 
only in serialno assignment. 
 
.IP "-G, --hide-granulepos" 10 
Hide the granulepos field of the preamble for 
each packet dumped. 
 
.IP "-P, --hide-packetno" 10 
Hide the packetno field of the preamble for 
each packet dumped. 
 
.SS "Mode options" 
.IP "-r, --revert" 10 
Revert an oggzdump. Generates an Ogg bitstream as prescribed 
in the input oggzdump. 
 
.IP "" 10 
The serialno, granulepos and packetno fields of the packet 
preambles in the oggzdump, as well as any bos or eos markers 
if present, are used to structure the packets into logical 
bitstreams. Hence it is advised that the original input 
oggzdump not be generated with any hiding filters. 
 
.IP "" 10 
Only the hexadecimal data columns of the input oggzdump are 
parsed when generating Ogg packet data; the printable character 
representation is ignored. 
 
.SS "Miscellaneous options" 
.IP "-o \fBfilename\fR, --output \fBfilename\fR" 10 
Write output to the specified 
\fBfilename\fR instead of printing it to 
standard output. 
 
.IP "-h, --help" 10 
Display usage information and exit. 
.SH "AUTHOR" 
.PP 
Conrad Parker        November 17, 2003;      
.SH "COPYRIGHT" 
.PP 
Copyright \(co 2003 CSIRO Australia 
 
.SH "SEE ALSO" 
.PP 
\fBoggzdiff\fP\fB(1)\fP, 
\fBxxd\fP\fB(1)\fP, 
\fBhexdump\fP\fB(1)\fP      
...\" created by instant / docbook-to-man, Wed 19 Nov 2003, 11:46 
